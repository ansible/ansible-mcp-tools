openapi: 3.0.3
info:
  title: AAP gateway API
  version: v1
  description: AAP gateway API
paths:
  /api/:
    get:
      operationId: api_retrieve
      tags:
      - api
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_root_view'
          description: ''
  /api/gateway/:
    get:
      operationId: api_gateway_retrieve
      tags:
      - api
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_gateway_root_view'
          description: ''
  /api/gateway/v1/:
    get:
      operationId: root_retrieve
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/gateway/v1/activitystream/:
    get:
      operationId: activitystream_list
      description: API endpoint that allows for read-only access to activity stream
        entries.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - activitystream
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntryList'
          description: ''
  /api/gateway/v1/activitystream/{id}/:
    get:
      operationId: activitystream_retrieve
      description: API endpoint that allows for read-only access to activity stream
        entries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this entry.
        required: true
      tags:
      - activitystream
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
          description: ''
  /api/gateway/v1/app_urls/:
    get:
      operationId: app_urls_list
      description: API endpoint that allows oauth apps to be listed for name and app_url
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - app_urls
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppUrlList'
          description: ''
  /api/gateway/v1/applications/:
    get:
      operationId: applications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - applications
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOAuth2ApplicationList'
          description: ''
    post:
      operationId: applications_create
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OAuth2Application'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
          description: ''
  /api/gateway/v1/applications/{id}/:
    get:
      operationId: applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
          description: ''
    put:
      operationId: applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OAuth2Application'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
          description: ''
    patch:
      operationId: applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOAuth2Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOAuth2Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOAuth2Application'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Application'
          description: ''
    delete:
      operationId: applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/applications/{id}/tokens/:
    get:
      operationId: applications_tokens_list
      description: |-
        Manage Access Token objects in the 'access_tokens' relationship of this particular Application.

        Starting from the detail URL:

        GET /:id/access_tokens/ to show access tokens currently in the relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - applications
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOAuth2TokenList'
          description: ''
  /api/gateway/v1/authenticator_maps/:
    get:
      operationId: authenticator_maps_list
      description: API endpoint that allows authenticator maps to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - authenticator_maps
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorMapList'
          description: ''
    post:
      operationId: authenticator_maps_create
      description: API endpoint that allows authenticator maps to be viewed or edited.
      tags:
      - authenticator_maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorMap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticatorMap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticatorMap'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorMap'
          description: ''
  /api/gateway/v1/authenticator_maps/{id}/:
    get:
      operationId: authenticator_maps_retrieve
      description: API endpoint that allows authenticator maps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator map.
        required: true
      tags:
      - authenticator_maps
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorMap'
          description: ''
    put:
      operationId: authenticator_maps_update
      description: API endpoint that allows authenticator maps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator map.
        required: true
      tags:
      - authenticator_maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorMap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticatorMap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticatorMap'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorMap'
          description: ''
    patch:
      operationId: authenticator_maps_partial_update
      description: API endpoint that allows authenticator maps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator map.
        required: true
      tags:
      - authenticator_maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorMap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorMap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticatorMap'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorMap'
          description: ''
    delete:
      operationId: authenticator_maps_destroy
      description: API endpoint that allows authenticator maps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator map.
        required: true
      tags:
      - authenticator_maps
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/authenticator_maps/{id}/authenticators/:
    get:
      operationId: authenticator_maps_authenticators_list
      description: |-
        Manage Authenticator objects in the 'authenticators' relationship of this particular Authenticator Map.

        Starting from the detail URL:

        GET /:id/authenticators/ to show authenticators currently in the relationship

        POST a list of instances to /:id/authenticators/associate/ to add those authenticators to the relationship

        POST a list of instances to /:id/authenticators/disassociate/ to remove those authenticators from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - authenticator_maps
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorList'
          description: ''
  /api/gateway/v1/authenticator_maps/{id}/authenticators/associate/:
    post:
      operationId: authenticator_maps_authenticators_associate_create
      description: |-
        Manage Authenticator objects in the 'authenticators' relationship of this particular Authenticator Map.

        Starting from the detail URL:

        GET /:id/authenticators/ to show authenticators currently in the relationship

        POST a list of instances to /:id/authenticators/associate/ to add those authenticators to the relationship

        POST a list of instances to /:id/authenticators/disassociate/ to remove those authenticators from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - authenticator_maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorAssociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticatorAssociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticatorAssociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorAssociate'
          description: ''
  /api/gateway/v1/authenticator_maps/{id}/authenticators/disassociate/:
    post:
      operationId: authenticator_maps_authenticators_disassociate_create
      description: |-
        Manage Authenticator objects in the 'authenticators' relationship of this particular Authenticator Map.

        Starting from the detail URL:

        GET /:id/authenticators/ to show authenticators currently in the relationship

        POST a list of instances to /:id/authenticators/associate/ to add those authenticators to the relationship

        POST a list of instances to /:id/authenticators/disassociate/ to remove those authenticators from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - authenticator_maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorDisassociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticatorDisassociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticatorDisassociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorDisassociate'
          description: ''
  /api/gateway/v1/authenticator_plugins/:
    get:
      operationId: authenticator_plugins_retrieve
      tags:
      - authenticator_plugins
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          description: No response body
  /api/gateway/v1/authenticator_users/:
    get:
      operationId: authenticator_users_list
      description: API endpoint that allows AuthenticatorUsers to be viewed and listed.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - authenticator_users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorUserList'
          description: ''
  /api/gateway/v1/authenticator_users/{id}/:
    get:
      operationId: authenticator_users_retrieve
      description: API endpoint that allows AuthenticatorUsers to be viewed and listed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator user.
        required: true
      tags:
      - authenticator_users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorUser'
          description: ''
  /api/gateway/v1/authenticator_users/{id}/move/:
    post:
      operationId: authenticator_users_move_create
      description: API endpoint that allows AuthenticatorUsers to be viewed and listed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator user.
        required: true
      tags:
      - authenticator_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorUserMove'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticatorUserMove'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticatorUserMove'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorUserMove'
          description: ''
  /api/gateway/v1/authenticators/:
    get:
      operationId: authenticators_list
      description: API endpoint that allows authenticators to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - authenticators
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorList'
          description: ''
    post:
      operationId: authenticators_create
      description: API endpoint that allows authenticators to be viewed or edited.
      tags:
      - authenticators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authenticator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authenticator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authenticator'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: ''
  /api/gateway/v1/authenticators/{id}/:
    get:
      operationId: authenticators_retrieve
      description: API endpoint that allows authenticators to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator.
        required: true
      tags:
      - authenticators
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: ''
    put:
      operationId: authenticators_update
      description: API endpoint that allows authenticators to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator.
        required: true
      tags:
      - authenticators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authenticator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authenticator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authenticator'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: ''
    patch:
      operationId: authenticators_partial_update
      description: API endpoint that allows authenticators to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator.
        required: true
      tags:
      - authenticators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthenticator'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: ''
    delete:
      operationId: authenticators_destroy
      description: API endpoint that allows authenticators to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this authenticator.
        required: true
      tags:
      - authenticators
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/authenticators/{id}/authenticator_maps/:
    get:
      operationId: authenticators_authenticator_maps_list
      description: |-
        Manage Authenticator Map objects in the 'authenticator_maps' relationship of this particular Authenticator.

        Starting from the detail URL:

        GET /:id/authenticator_maps/ to show authenticator maps currently in the relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - authenticators
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticatorMapList'
          description: ''
  /api/gateway/v1/authenticators/{id}/users/:
    get:
      operationId: authenticators_users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - authenticators
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/gateway/v1/docs/schema/:
    get:
      operationId: docs_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - docs
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/gateway/v1/feature_flags_state/:
    get:
      operationId: feature_flags_state_retrieve
      description: A view class for displaying feature flags
      tags:
      - feature_flags_state
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          description: No response body
  /api/gateway/v1/http_ports/:
    get:
      operationId: http_ports_list
      description: API endpoint that allows HTTP ports to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - http_ports
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHTTPPortList'
          description: ''
    post:
      operationId: http_ports_create
      description: API endpoint that allows HTTP ports to be viewed or edited.
      tags:
      - http_ports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HTTPPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HTTPPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HTTPPort'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPPort'
          description: ''
  /api/gateway/v1/http_ports/{id}/:
    get:
      operationId: http_ports_retrieve
      description: API endpoint that allows HTTP ports to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this http port.
        required: true
      tags:
      - http_ports
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPPort'
          description: ''
    put:
      operationId: http_ports_update
      description: API endpoint that allows HTTP ports to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this http port.
        required: true
      tags:
      - http_ports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HTTPPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HTTPPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HTTPPort'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPPort'
          description: ''
    patch:
      operationId: http_ports_partial_update
      description: API endpoint that allows HTTP ports to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this http port.
        required: true
      tags:
      - http_ports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHTTPPort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHTTPPort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHTTPPort'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPPort'
          description: ''
    delete:
      operationId: http_ports_destroy
      description: API endpoint that allows HTTP ports to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this http port.
        required: true
      tags:
      - http_ports
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/http_ports/{id}/routes/:
    get:
      operationId: http_ports_routes_list
      description: |-
        Manage Additional Route objects in the 'routes' relationship of this particular Http Port.

        Starting from the detail URL:

        GET /:id/routes/ to show additional routes currently in the relationship

        POST a list of instances to /:id/routes/associate/ to add those additional routes to the relationship

        POST a list of instances to /:id/routes/disassociate/ to remove those additional routes from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - http_ports
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdditionalRouteList'
          description: ''
  /api/gateway/v1/http_ports/{id}/routes/associate/:
    post:
      operationId: http_ports_routes_associate_create
      description: |-
        Manage Additional Route objects in the 'routes' relationship of this particular Http Port.

        Starting from the detail URL:

        GET /:id/routes/ to show additional routes currently in the relationship

        POST a list of instances to /:id/routes/associate/ to add those additional routes to the relationship

        POST a list of instances to /:id/routes/disassociate/ to remove those additional routes from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      tags:
      - http_ports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalRouteAssociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalRouteAssociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalRouteAssociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalRouteAssociate'
          description: ''
  /api/gateway/v1/http_ports/{id}/routes/disassociate/:
    post:
      operationId: http_ports_routes_disassociate_create
      description: |-
        Manage Additional Route objects in the 'routes' relationship of this particular Http Port.

        Starting from the detail URL:

        GET /:id/routes/ to show additional routes currently in the relationship

        POST a list of instances to /:id/routes/associate/ to add those additional routes to the relationship

        POST a list of instances to /:id/routes/disassociate/ to remove those additional routes from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      tags:
      - http_ports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalRouteDisassociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalRouteDisassociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalRouteDisassociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalRouteDisassociate'
          description: ''
  /api/gateway/v1/jwt_key/:
    get:
      operationId: jwt_key_retrieve
      tags:
      - jwt_key
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/gateway/v1/legacy_auth/:
    get:
      operationId: legacy_auth_list
      tags:
      - legacy_auth
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          description: No response body
  /api/gateway/v1/legacy_auth/authenticate_sso/:
    get:
      operationId: legacy_auth_authenticate_sso_retrieve
      tags:
      - legacy_auth
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          description: No response body
  /api/gateway/v1/legacy_auth/controller_password/:
    get:
      operationId: legacy_auth_controller_password_retrieve
      tags:
      - legacy_auth
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernamePassword'
          description: ''
    post:
      operationId: legacy_auth_controller_password_create
      tags:
      - legacy_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernamePassword'
          description: ''
  /api/gateway/v1/legacy_auth/eda_password/:
    get:
      operationId: legacy_auth_eda_password_retrieve
      tags:
      - legacy_auth
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernamePassword'
          description: ''
    post:
      operationId: legacy_auth_eda_password_create
      tags:
      - legacy_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernamePassword'
          description: ''
  /api/gateway/v1/legacy_auth/finalize/:
    post:
      operationId: legacy_auth_finalize_create
      tags:
      - legacy_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Finalize'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Finalize'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Finalize'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finalize'
          description: ''
  /api/gateway/v1/legacy_auth/hub_password/:
    get:
      operationId: legacy_auth_hub_password_retrieve
      tags:
      - legacy_auth
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernamePassword'
          description: ''
    post:
      operationId: legacy_auth_hub_password_create
      tags:
      - legacy_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernamePassword'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernamePassword'
          description: ''
  /api/gateway/v1/legacy_auth/reset/:
    post:
      operationId: legacy_auth_reset_create
      tags:
      - legacy_auth
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          description: No response body
  /api/gateway/v1/me/:
    get:
      operationId: me_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - me
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/gateway/v1/organizations/:
    get:
      operationId: organizations_list
      description: API endpoint that allows organizations to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - organizations
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: organizations_create
      description: API endpoint that allows organizations to be viewed or edited.
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/gateway/v1/organizations/{id}/:
    get:
      operationId: organizations_retrieve
      description: API endpoint that allows organizations to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - organizations
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: organizations_update
      description: API endpoint that allows organizations to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: organizations_partial_update
      description: API endpoint that allows organizations to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: organizations_destroy
      description: API endpoint that allows organizations to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - organizations
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/organizations/{id}/admins/:
    get:
      operationId: organizations_admins_list
      description: |-
        Manage User objects in the 'admins' relationship of this particular Organization.

        Starting from the detail URL:

        GET /:id/admins/ to show users currently in the relationship

        POST a list of instances to /:id/admins/associate/ to add those users to the relationship

        POST a list of instances to /:id/admins/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - organizations
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/gateway/v1/organizations/{id}/admins/associate/:
    post:
      operationId: organizations_admins_associate_create
      description: |-
        Manage User objects in the 'admins' relationship of this particular Organization.

        Starting from the detail URL:

        GET /:id/admins/ to show users currently in the relationship

        POST a list of instances to /:id/admins/associate/ to add those users to the relationship

        POST a list of instances to /:id/admins/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAssociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAssociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssociate'
          description: ''
  /api/gateway/v1/organizations/{id}/admins/disassociate/:
    post:
      operationId: organizations_admins_disassociate_create
      description: |-
        Manage User objects in the 'admins' relationship of this particular Organization.

        Starting from the detail URL:

        GET /:id/admins/ to show users currently in the relationship

        POST a list of instances to /:id/admins/associate/ to add those users to the relationship

        POST a list of instances to /:id/admins/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDisassociate'
          description: ''
  /api/gateway/v1/organizations/{id}/teams/:
    get:
      operationId: organizations_teams_list
      description: |-
        Manage Team objects in the 'teams' relationship of this particular Organization.

        Starting from the detail URL:

        GET /:id/teams/ to show teams currently in the relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - organizations
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
          description: ''
  /api/gateway/v1/organizations/{id}/users/:
    get:
      operationId: organizations_users_list
      description: |-
        Manage User objects in the 'users' relationship of this particular Organization.

        Starting from the detail URL:

        GET /:id/users/ to show users currently in the relationship

        POST a list of instances to /:id/users/associate/ to add those users to the relationship

        POST a list of instances to /:id/users/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - organizations
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/gateway/v1/organizations/{id}/users/associate/:
    post:
      operationId: organizations_users_associate_create
      description: |-
        Manage User objects in the 'users' relationship of this particular Organization.

        Starting from the detail URL:

        GET /:id/users/ to show users currently in the relationship

        POST a list of instances to /:id/users/associate/ to add those users to the relationship

        POST a list of instances to /:id/users/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAssociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAssociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssociate'
          description: ''
  /api/gateway/v1/organizations/{id}/users/disassociate/:
    post:
      operationId: organizations_users_disassociate_create
      description: |-
        Manage User objects in the 'users' relationship of this particular Organization.

        Starting from the detail URL:

        GET /:id/users/ to show users currently in the relationship

        POST a list of instances to /:id/users/associate/ to add those users to the relationship

        POST a list of instances to /:id/users/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDisassociate'
          description: ''
  /api/gateway/v1/ping/:
    get:
      operationId: ping_retrieve
      tags:
      - ping
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ping'
          description: ''
  /api/gateway/v1/role_definitions/:
    get:
      operationId: role_definitions_list
      description: |-
        Role Definitions (roles) contain a list of permissions and can be used to
        assign those permissions to a user or team through the respective
        assignment endpoints.

        Custom roles can be created, modified, and deleted through this endpoint.
        System-managed roles are shown here, which cannot be edited or deleted,
        but can be assigned to users.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - role_definitions
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleDefinitionList'
          description: ''
    post:
      operationId: role_definitions_create
      description: |-
        Role Definitions (roles) contain a list of permissions and can be used to
        assign those permissions to a user or team through the respective
        assignment endpoints.

        Custom roles can be created, modified, and deleted through this endpoint.
        System-managed roles are shown here, which cannot be edited or deleted,
        but can be assigned to users.
      tags:
      - role_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleDefinition'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: ''
  /api/gateway/v1/role_definitions/{id}/:
    get:
      operationId: role_definitions_retrieve
      description: |-
        Role Definitions (roles) contain a list of permissions and can be used to
        assign those permissions to a user or team through the respective
        assignment endpoints.

        Custom roles can be created, modified, and deleted through this endpoint.
        System-managed roles are shown here, which cannot be edited or deleted,
        but can be assigned to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role definition.
        required: true
      tags:
      - role_definitions
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: ''
    put:
      operationId: role_definitions_update
      description: |-
        Role Definitions (roles) contain a list of permissions and can be used to
        assign those permissions to a user or team through the respective
        assignment endpoints.

        Custom roles can be created, modified, and deleted through this endpoint.
        System-managed roles are shown here, which cannot be edited or deleted,
        but can be assigned to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role definition.
        required: true
      tags:
      - role_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDefinitionDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleDefinitionDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleDefinitionDetail'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinitionDetail'
          description: ''
    patch:
      operationId: role_definitions_partial_update
      description: |-
        Role Definitions (roles) contain a list of permissions and can be used to
        assign those permissions to a user or team through the respective
        assignment endpoints.

        Custom roles can be created, modified, and deleted through this endpoint.
        System-managed roles are shown here, which cannot be edited or deleted,
        but can be assigned to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role definition.
        required: true
      tags:
      - role_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoleDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoleDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoleDefinition'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
          description: ''
    delete:
      operationId: role_definitions_destroy
      description: |-
        Role Definitions (roles) contain a list of permissions and can be used to
        assign those permissions to a user or team through the respective
        assignment endpoints.

        Custom roles can be created, modified, and deleted through this endpoint.
        System-managed roles are shown here, which cannot be edited or deleted,
        but can be assigned to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role definition.
        required: true
      tags:
      - role_definitions
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/role_definitions/{id}/team_assignments/:
    get:
      operationId: role_definitions_team_assignments_list
      description: |-
        Manage Role Team Assignment objects in the 'team_assignments' relationship of this particular Role Definition.

        Starting from the detail URL:

        GET /:id/team_assignments/ to show role team assignments currently in the relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - role_definitions
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleTeamAssignmentList'
          description: ''
  /api/gateway/v1/role_definitions/{id}/user_assignments/:
    get:
      operationId: role_definitions_user_assignments_list
      description: |-
        Manage Role User Assignment objects in the 'user_assignments' relationship of this particular Role Definition.

        Starting from the detail URL:

        GET /:id/user_assignments/ to show role user assignments currently in the relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - role_definitions
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleUserAssignmentList'
          description: ''
  /api/gateway/v1/role_metadata/:
    get:
      operationId: role_metadata_retrieve
      description: |-
        General data about models and permissions tracked by django-ansible-base RBAC

        Information from this endpoint should be static given a server version.
        This reflects model definitions, registrations with the permission registry,
        and enablement of RBAC features in settings.

        allowed_permissions: Valid permissions for a role of a given content_type
      tags:
      - role_metadata
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMetadata'
          description: ''
  /api/gateway/v1/role_team_assignments/:
    get:
      operationId: role_team_assignments_list
      description: |-
        Use this endpoint to give a team permission to a resource or an organization.
        The needed data is the team, the role definition, and the object id.
        The object must be of the type specified in the role definition.
        The type given in the role definition and the provided object_id are used
        to look up the resource.

        After creation, the assignment cannot be edited, but can be deleted to
        remove those permissions.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - role_team_assignments
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleTeamAssignmentList'
          description: ''
    post:
      operationId: role_team_assignments_create
      description: |-
        Use this endpoint to give a team permission to a resource or an organization.
        The needed data is the team, the role definition, and the object id.
        The object must be of the type specified in the role definition.
        The type given in the role definition and the provided object_id are used
        to look up the resource.

        After creation, the assignment cannot be edited, but can be deleted to
        remove those permissions.
      tags:
      - role_team_assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleTeamAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleTeamAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleTeamAssignment'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTeamAssignment'
          description: ''
  /api/gateway/v1/role_team_assignments/{id}/:
    get:
      operationId: role_team_assignments_retrieve
      description: |-
        Use this endpoint to give a team permission to a resource or an organization.
        The needed data is the team, the role definition, and the object id.
        The object must be of the type specified in the role definition.
        The type given in the role definition and the provided object_id are used
        to look up the resource.

        After creation, the assignment cannot be edited, but can be deleted to
        remove those permissions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role team assignment.
        required: true
      tags:
      - role_team_assignments
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTeamAssignment'
          description: ''
    delete:
      operationId: role_team_assignments_destroy
      description: |-
        Use this endpoint to give a team permission to a resource or an organization.
        The needed data is the team, the role definition, and the object id.
        The object must be of the type specified in the role definition.
        The type given in the role definition and the provided object_id are used
        to look up the resource.

        After creation, the assignment cannot be edited, but can be deleted to
        remove those permissions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role team assignment.
        required: true
      tags:
      - role_team_assignments
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/role_user_assignments/:
    get:
      operationId: role_user_assignments_list
      description: |-
        Use this endpoint to give a user permission to a resource or an organization.
        The needed data is the user, the role definition, and the object id.
        The object must be of the type specified in the role definition.
        The type given in the role definition and the provided object_id are used
        to look up the resource.

        After creation, the assignment cannot be edited, but can be deleted to
        remove those permissions.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - role_user_assignments
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleUserAssignmentList'
          description: ''
    post:
      operationId: role_user_assignments_create
      description: |-
        Use this endpoint to give a user permission to a resource or an organization.
        The needed data is the user, the role definition, and the object id.
        The object must be of the type specified in the role definition.
        The type given in the role definition and the provided object_id are used
        to look up the resource.

        After creation, the assignment cannot be edited, but can be deleted to
        remove those permissions.
      tags:
      - role_user_assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUserAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleUserAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleUserAssignment'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleUserAssignment'
          description: ''
  /api/gateway/v1/role_user_assignments/{id}/:
    get:
      operationId: role_user_assignments_retrieve
      description: |-
        Use this endpoint to give a user permission to a resource or an organization.
        The needed data is the user, the role definition, and the object id.
        The object must be of the type specified in the role definition.
        The type given in the role definition and the provided object_id are used
        to look up the resource.

        After creation, the assignment cannot be edited, but can be deleted to
        remove those permissions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role user assignment.
        required: true
      tags:
      - role_user_assignments
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleUserAssignment'
          description: ''
    delete:
      operationId: role_user_assignments_destroy
      description: |-
        Use this endpoint to give a user permission to a resource or an organization.
        The needed data is the user, the role definition, and the object id.
        The object must be of the type specified in the role definition.
        The type given in the role definition and the provided object_id are used
        to look up the resource.

        After creation, the assignment cannot be edited, but can be deleted to
        remove those permissions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role user assignment.
        required: true
      tags:
      - role_user_assignments
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/routes/:
    get:
      operationId: routes_list
      description: API endpoint that allows additional routes to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - routes
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdditionalRouteList'
          description: ''
    post:
      operationId: routes_create
      description: API endpoint that allows additional routes to be viewed or edited.
      tags:
      - routes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalRoute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalRoute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalRoute'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalRoute'
          description: ''
  /api/gateway/v1/routes/{id}/:
    get:
      operationId: routes_retrieve
      description: API endpoint that allows additional routes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      tags:
      - routes
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalRoute'
          description: ''
    put:
      operationId: routes_update
      description: API endpoint that allows additional routes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      tags:
      - routes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalRoute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalRoute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalRoute'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalRoute'
          description: ''
    patch:
      operationId: routes_partial_update
      description: API endpoint that allows additional routes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      tags:
      - routes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalRoute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalRoute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalRoute'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalRoute'
          description: ''
    delete:
      operationId: routes_destroy
      description: API endpoint that allows additional routes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      tags:
      - routes
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/service-index/:
    get:
      operationId: service_index_retrieve
      description: Link other resource registry endpoints
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          description: No response body
  /api/gateway/v1/service-index/metadata/:
    get:
      operationId: service_index_metadata_retrieve
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          description: No response body
  /api/gateway/v1/service-index/resource-types/:
    get:
      operationId: service_index_resource_types_list
      description: Index of the resource types that are configured in the system.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceTypeList'
          description: ''
  /api/gateway/v1/service-index/resource-types/{name}/:
    get:
      operationId: service_index_resource_types_retrieve
      description: Index of the resource types that are configured in the system.
      parameters:
      - in: path
        name: name
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceType'
          description: ''
  /api/gateway/v1/service-index/resource-types/{name}/manifest/:
    get:
      operationId: service_index_resource_types_manifest_retrieve
      description: Returns the as a stream the csv of resource_id,hash for a given
        resource type.
      parameters:
      - in: path
        name: name
        schema:
          type: string
          pattern: ^[^/]+$
        required: true
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceType'
          description: ''
  /api/gateway/v1/service-index/resources/:
    get:
      operationId: service_index_resources_list
      description: Index of all the resources in the system.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceListList'
          description: ''
    post:
      operationId: service_index_resources_create
      description: Index of all the resources in the system.
      tags:
      - service-index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Resource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Resource'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
  /api/gateway/v1/service-index/resources/{ansible_id}/:
    get:
      operationId: service_index_resources_retrieve
      description: Index of all the resources in the system.
      parameters:
      - in: path
        name: ansible_id
        schema:
          type: string
          format: uuid
          description: A unique ID identifying this resource by the resource server.
        required: true
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    put:
      operationId: service_index_resources_update
      description: Index of all the resources in the system.
      parameters:
      - in: path
        name: ansible_id
        schema:
          type: string
          format: uuid
          description: A unique ID identifying this resource by the resource server.
        required: true
      tags:
      - service-index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Resource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Resource'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    patch:
      operationId: service_index_resources_partial_update
      description: Index of all the resources in the system.
      parameters:
      - in: path
        name: ansible_id
        schema:
          type: string
          format: uuid
          description: A unique ID identifying this resource by the resource server.
        required: true
      tags:
      - service-index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResource'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: ''
    delete:
      operationId: service_index_resources_destroy
      description: Index of all the resources in the system.
      parameters:
      - in: path
        name: ansible_id
        schema:
          type: string
          format: uuid
          description: A unique ID identifying this resource by the resource server.
        required: true
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/service-index/validate-local-account/:
    post:
      operationId: service_index_validate_local_account_create
      description: Validate a user's username and password.
      tags:
      - service-index
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      - {}
      responses:
        '200':
          description: No response body
  /api/gateway/v1/service_clusters/:
    get:
      operationId: service_clusters_list
      description: API endpoint that allows service clusters to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_clusters
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceClusterList'
          description: ''
    post:
      operationId: service_clusters_create
      description: API endpoint that allows service clusters to be viewed or edited.
      tags:
      - service_clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCluster'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceCluster'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceCluster'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCluster'
          description: ''
  /api/gateway/v1/service_clusters/{id}/:
    get:
      operationId: service_clusters_retrieve
      description: API endpoint that allows service clusters to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service cluster.
        required: true
      tags:
      - service_clusters
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCluster'
          description: ''
    put:
      operationId: service_clusters_update
      description: API endpoint that allows service clusters to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service cluster.
        required: true
      tags:
      - service_clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCluster'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceCluster'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceCluster'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCluster'
          description: ''
    patch:
      operationId: service_clusters_partial_update
      description: API endpoint that allows service clusters to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service cluster.
        required: true
      tags:
      - service_clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceCluster'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceCluster'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceCluster'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCluster'
          description: ''
    delete:
      operationId: service_clusters_destroy
      description: API endpoint that allows service clusters to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service cluster.
        required: true
      tags:
      - service_clusters
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/service_clusters/{id}/nodes/:
    get:
      operationId: service_clusters_nodes_list
      description: |-
        Manage Service Node objects in the 'nodes' relationship of this particular Service Cluster.

        Starting from the detail URL:

        GET /:id/nodes/ to show service nodes currently in the relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_clusters
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceNodeList'
          description: ''
  /api/gateway/v1/service_clusters/{id}/routes/:
    get:
      operationId: service_clusters_routes_list
      description: |-
        Manage Additional Route objects in the 'routes' relationship of this particular Service Cluster.

        Starting from the detail URL:

        GET /:id/routes/ to show additional routes currently in the relationship

        POST a list of instances to /:id/routes/associate/ to add those additional routes to the relationship

        POST a list of instances to /:id/routes/disassociate/ to remove those additional routes from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_clusters
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdditionalRouteList'
          description: ''
  /api/gateway/v1/service_clusters/{id}/routes/associate/:
    post:
      operationId: service_clusters_routes_associate_create
      description: |-
        Manage Additional Route objects in the 'routes' relationship of this particular Service Cluster.

        Starting from the detail URL:

        GET /:id/routes/ to show additional routes currently in the relationship

        POST a list of instances to /:id/routes/associate/ to add those additional routes to the relationship

        POST a list of instances to /:id/routes/disassociate/ to remove those additional routes from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      tags:
      - service_clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalRouteAssociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalRouteAssociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalRouteAssociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalRouteAssociate'
          description: ''
  /api/gateway/v1/service_clusters/{id}/routes/disassociate/:
    post:
      operationId: service_clusters_routes_disassociate_create
      description: |-
        Manage Additional Route objects in the 'routes' relationship of this particular Service Cluster.

        Starting from the detail URL:

        GET /:id/routes/ to show additional routes currently in the relationship

        POST a list of instances to /:id/routes/associate/ to add those additional routes to the relationship

        POST a list of instances to /:id/routes/disassociate/ to remove those additional routes from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this additional route.
        required: true
      tags:
      - service_clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalRouteDisassociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalRouteDisassociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalRouteDisassociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalRouteDisassociate'
          description: ''
  /api/gateway/v1/service_clusters/{id}/service_keys/:
    get:
      operationId: service_clusters_service_keys_list
      description: |-
        Manage Service Key objects in the 'service_keys' relationship of this particular Service Cluster.

        Starting from the detail URL:

        GET /:id/service_keys/ to show service keys currently in the relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_clusters
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceKeyList'
          description: ''
  /api/gateway/v1/service_clusters/{id}/service_types/:
    get:
      operationId: service_clusters_service_types_list
      description: |-
        Manage Service Type objects in the 'service_types' relationship of this particular Service Cluster.

        Starting from the detail URL:

        GET /:id/service_types/ to show service types currently in the relationship

        POST a list of instances to /:id/service_types/associate/ to add those service types to the relationship

        POST a list of instances to /:id/service_types/disassociate/ to remove those service types from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_clusters
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceTypeList'
          description: ''
  /api/gateway/v1/service_clusters/{id}/service_types/associate/:
    post:
      operationId: service_clusters_service_types_associate_create
      description: |-
        Manage Service Type objects in the 'service_types' relationship of this particular Service Cluster.

        Starting from the detail URL:

        GET /:id/service_types/ to show service types currently in the relationship

        POST a list of instances to /:id/service_types/associate/ to add those service types to the relationship

        POST a list of instances to /:id/service_types/disassociate/ to remove those service types from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - service_clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTypeAssociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTypeAssociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTypeAssociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTypeAssociate'
          description: ''
  /api/gateway/v1/service_clusters/{id}/service_types/disassociate/:
    post:
      operationId: service_clusters_service_types_disassociate_create
      description: |-
        Manage Service Type objects in the 'service_types' relationship of this particular Service Cluster.

        Starting from the detail URL:

        GET /:id/service_types/ to show service types currently in the relationship

        POST a list of instances to /:id/service_types/associate/ to add those service types to the relationship

        POST a list of instances to /:id/service_types/disassociate/ to remove those service types from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - service_clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTypeDisassociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTypeDisassociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTypeDisassociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTypeDisassociate'
          description: ''
  /api/gateway/v1/service_keys/:
    get:
      operationId: service_keys_list
      description: API endpoint that allows configuring service authentication keys.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_keys
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceKeyList'
          description: ''
    post:
      operationId: service_keys_create
      description: API endpoint that allows configuring service authentication keys.
      tags:
      - service_keys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceKey'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceKey'
          description: ''
  /api/gateway/v1/service_keys/{id}/:
    get:
      operationId: service_keys_retrieve
      description: API endpoint that allows configuring service authentication keys.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service key.
        required: true
      tags:
      - service_keys
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceKey'
          description: ''
    put:
      operationId: service_keys_update
      description: API endpoint that allows configuring service authentication keys.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service key.
        required: true
      tags:
      - service_keys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceKey'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceKey'
          description: ''
    patch:
      operationId: service_keys_partial_update
      description: API endpoint that allows configuring service authentication keys.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service key.
        required: true
      tags:
      - service_keys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceKey'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceKey'
          description: ''
    delete:
      operationId: service_keys_destroy
      description: API endpoint that allows configuring service authentication keys.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service key.
        required: true
      tags:
      - service_keys
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/service_nodes/:
    get:
      operationId: service_nodes_list
      description: API endpoint that allows service nodes to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_nodes
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceNodeList'
          description: ''
    post:
      operationId: service_nodes_create
      description: API endpoint that allows service nodes to be viewed or edited.
      tags:
      - service_nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceNode'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNode'
          description: ''
  /api/gateway/v1/service_nodes/{id}/:
    get:
      operationId: service_nodes_retrieve
      description: API endpoint that allows service nodes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service node.
        required: true
      tags:
      - service_nodes
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNode'
          description: ''
    put:
      operationId: service_nodes_update
      description: API endpoint that allows service nodes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service node.
        required: true
      tags:
      - service_nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceNode'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNode'
          description: ''
    patch:
      operationId: service_nodes_partial_update
      description: API endpoint that allows service nodes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service node.
        required: true
      tags:
      - service_nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceNode'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNode'
          description: ''
    delete:
      operationId: service_nodes_destroy
      description: API endpoint that allows service nodes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service node.
        required: true
      tags:
      - service_nodes
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/service_types/:
    get:
      operationId: service_types_list
      description: API endpoint that allows service types to be viewed or edited
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_types
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceTypeList'
          description: ''
    post:
      operationId: service_types_create
      description: API endpoint that allows service types to be viewed or edited
      tags:
      - service_types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceType'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceType'
          description: ''
  /api/gateway/v1/service_types/{id}/:
    get:
      operationId: service_types_retrieve
      description: API endpoint that allows service types to be viewed or edited
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service type.
        required: true
      tags:
      - service_types
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceType'
          description: ''
    put:
      operationId: service_types_update
      description: API endpoint that allows service types to be viewed or edited
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service type.
        required: true
      tags:
      - service_types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceType'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceType'
          description: ''
    patch:
      operationId: service_types_partial_update
      description: API endpoint that allows service types to be viewed or edited
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service type.
        required: true
      tags:
      - service_types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceType'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceType'
          description: ''
    delete:
      operationId: service_types_destroy
      description: API endpoint that allows service types to be viewed or edited
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service type.
        required: true
      tags:
      - service_types
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/service_types/{id}/clusters/:
    get:
      operationId: service_types_clusters_list
      description: |-
        Manage Service Cluster objects in the 'clusters' relationship of this particular Service Type.

        Starting from the detail URL:

        GET /:id/clusters/ to show service clusters currently in the relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - service_types
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceClusterList'
          description: ''
  /api/gateway/v1/services/:
    get:
      operationId: services_list
      description: API endpoint that allows service API routes to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - services
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceAPIRouteList'
          description: ''
    post:
      operationId: services_create
      description: API endpoint that allows service API routes to be viewed or edited.
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAPIRoute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceAPIRoute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceAPIRoute'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAPIRoute'
          description: ''
  /api/gateway/v1/services/{id}/:
    get:
      operationId: services_retrieve
      description: API endpoint that allows service API routes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service api route.
        required: true
      tags:
      - services
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAPIRoute'
          description: ''
    put:
      operationId: services_update
      description: API endpoint that allows service API routes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service api route.
        required: true
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAPIRoute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceAPIRoute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceAPIRoute'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAPIRoute'
          description: ''
    patch:
      operationId: services_partial_update
      description: API endpoint that allows service API routes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service api route.
        required: true
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceAPIRoute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceAPIRoute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceAPIRoute'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAPIRoute'
          description: ''
    delete:
      operationId: services_destroy
      description: API endpoint that allows service API routes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service api route.
        required: true
      tags:
      - services
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/session/:
    get:
      operationId: session_retrieve
      tags:
      - session
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_view'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_view_404'
          description: ''
    post:
      operationId: session_create
      tags:
      - session
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_view_post'
          description: ''
  /api/gateway/v1/settings/:
    get:
      operationId: settings_list
      description: |-
        A view class for managing and displaying all section of settings, with their urls and names
        Endpoint: '/api/gateway/v1/settings/'
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - settings
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSettingSectionListList'
          description: ''
  /api/gateway/v1/settings/{category_slug}/:
    get:
      operationId: settings_getter
      description: |-
        A view class for managing and displaying a group of settings for a specific category.
        Endpoint: '/api/gateway/v1/settings/<category_slug>/'
        Parameters:
        - category_slug: The category of the setting (e.g., 'proxy', 'configuration').
      parameters:
      - in: path
        name: category_slug
        schema:
          type: string
          pattern: ^[a-z0-9_]+$
        required: true
      tags:
      - settings
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingSection'
          description: ''
    put:
      operationId: settings_update
      description: |-
        A view class for managing and displaying a group of settings for a specific category.
        Endpoint: '/api/gateway/v1/settings/<category_slug>/'
        Parameters:
        - category_slug: The category of the setting (e.g., 'proxy', 'configuration').
      parameters:
      - in: path
        name: category_slug
        schema:
          type: string
          pattern: ^[a-z0-9_]+$
        required: true
      tags:
      - settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SettingSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SettingSection'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingSection'
          description: ''
    delete:
      operationId: settings_destroyer
      description: |-
        Revert all preferences in the current category to their default values
        except for read_only or encrypted settings
      parameters:
      - in: path
        name: category_slug
        schema:
          type: string
          pattern: ^[a-z0-9_]+$
        required: true
      tags:
      - settings
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/settings/{category_slug}/{preference_name}/:
    get:
      operationId: settings_retrieve
      description: |-
        A view class for managing and displaying a single setting information for a specified category.
        URL pattern: '/api/gateway/v1/settings/<category_slug>/<preference_name>/'
        Parameters:
        - category_slug: The category of the setting (e.g., 'proxy', 'configuration').
        - preference_name: The name of the specific setting (e.g., 'request_timeout', 'default_page_size').
      parameters:
      - in: path
        name: category_slug
        schema:
          type: string
          pattern: ^[a-z0-9_]+$
        required: true
      - in: path
        name: preference_name
        schema:
          type: string
          pattern: ^[a-zA-Z0-9_]+$
        required: true
      tags:
      - settings
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingPreference'
          description: ''
    delete:
      operationId: settings_destroy
      description: |-
        revert the setting `preference_name` in section `category_slug` to its default value.
        The `category_slug` parameter must be specified (i.e., cannot be 'all')
        because Preference only guarantees uniqueness for the tuple (section, preference_name).
        Therefore, thus can be multiple settings with the same name in different sections.
      parameters:
      - in: path
        name: category_slug
        schema:
          type: string
          pattern: ^[a-z0-9_]+$
        required: true
      - in: path
        name: preference_name
        schema:
          type: string
          pattern: ^[a-zA-Z0-9_]+$
        required: true
      tags:
      - settings
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/status/:
    get:
      operationId: status_retrieve
      description: API endpoint that shows status of platform services.
      parameters:
      - in: query
        name: service_keys
        schema:
          type: boolean
        description: Use a dictionary to describe services instead of a list
      tags:
      - status
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseOptions'
          description: ''
  /api/gateway/v1/teams/:
    get:
      operationId: teams_list
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - teams
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
          description: ''
    post:
      operationId: teams_create
      description: API endpoint that allows groups to be viewed or edited.
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /api/gateway/v1/teams/{id}/:
    get:
      operationId: teams_retrieve
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    put:
      operationId: teams_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    patch:
      operationId: teams_partial_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    delete:
      operationId: teams_destroy
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/teams/{id}/admins/:
    get:
      operationId: teams_admins_list
      description: |-
        Manage User objects in the 'admins' relationship of this particular Team.

        Starting from the detail URL:

        GET /:id/admins/ to show users currently in the relationship

        POST a list of instances to /:id/admins/associate/ to add those users to the relationship

        POST a list of instances to /:id/admins/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - teams
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/gateway/v1/teams/{id}/admins/associate/:
    post:
      operationId: teams_admins_associate_create
      description: |-
        Manage User objects in the 'admins' relationship of this particular Team.

        Starting from the detail URL:

        GET /:id/admins/ to show users currently in the relationship

        POST a list of instances to /:id/admins/associate/ to add those users to the relationship

        POST a list of instances to /:id/admins/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAssociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAssociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssociate'
          description: ''
  /api/gateway/v1/teams/{id}/admins/disassociate/:
    post:
      operationId: teams_admins_disassociate_create
      description: |-
        Manage User objects in the 'admins' relationship of this particular Team.

        Starting from the detail URL:

        GET /:id/admins/ to show users currently in the relationship

        POST a list of instances to /:id/admins/associate/ to add those users to the relationship

        POST a list of instances to /:id/admins/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDisassociate'
          description: ''
  /api/gateway/v1/teams/{id}/users/:
    get:
      operationId: teams_users_list
      description: |-
        Manage User objects in the 'users' relationship of this particular Team.

        Starting from the detail URL:

        GET /:id/users/ to show users currently in the relationship

        POST a list of instances to /:id/users/associate/ to add those users to the relationship

        POST a list of instances to /:id/users/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - teams
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/gateway/v1/teams/{id}/users/associate/:
    post:
      operationId: teams_users_associate_create
      description: |-
        Manage User objects in the 'users' relationship of this particular Team.

        Starting from the detail URL:

        GET /:id/users/ to show users currently in the relationship

        POST a list of instances to /:id/users/associate/ to add those users to the relationship

        POST a list of instances to /:id/users/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAssociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAssociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssociate'
          description: ''
  /api/gateway/v1/teams/{id}/users/disassociate/:
    post:
      operationId: teams_users_disassociate_create
      description: |-
        Manage User objects in the 'users' relationship of this particular Team.

        Starting from the detail URL:

        GET /:id/users/ to show users currently in the relationship

        POST a list of instances to /:id/users/associate/ to add those users to the relationship

        POST a list of instances to /:id/users/disassociate/ to remove those users from the relationshp
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDisassociate'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDisassociate'
          description: ''
  /api/gateway/v1/tokens/:
    get:
      operationId: tokens_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - tokens
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOAuth2TokenList'
          description: ''
    post:
      operationId: tokens_create
      tags:
      - tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Token'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2Token'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OAuth2Token'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
          description: ''
  /api/gateway/v1/tokens/{id}/:
    get:
      operationId: tokens_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access token.
        required: true
      tags:
      - tokens
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
          description: ''
    put:
      operationId: tokens_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access token.
        required: true
      tags:
      - tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Token'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth2Token'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OAuth2Token'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
          description: ''
    patch:
      operationId: tokens_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access token.
        required: true
      tags:
      - tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOAuth2Token'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOAuth2Token'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOAuth2Token'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
          description: ''
    delete:
      operationId: tokens_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access token.
        required: true
      tags:
      - tokens
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/trigger_definition/:
    get:
      operationId: trigger_definition_retrieve
      tags:
      - trigger_definition
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          description: No response body
  /api/gateway/v1/ui_auth/:
    get:
      operationId: ui_auth_retrieve
      description: Extend the UIAuth view from DAB to show legacy auth information
      tags:
      - ui_auth
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_ui_auth'
          description: ''
  /api/gateway/v1/users/:
    get:
      operationId: users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/gateway/v1/users/{id}/:
    get:
      operationId: users_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '204':
          description: No response body
  /api/gateway/v1/users/{id}/authenticators/:
    get:
      operationId: users_authenticators_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/gateway/v1/users/{id}/authorized_tokens/:
    get:
      operationId: users_authorized_tokens_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/gateway/v1/users/{id}/organizations/:
    get:
      operationId: users_organizations_list
      description: Update the corresponding resource in each service.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
  /api/gateway/v1/users/{id}/personal_tokens/:
    get:
      operationId: users_personal_tokens_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/gateway/v1/users/{id}/teams/:
    get:
      operationId: users_teams_list
      description: Update the corresponding resource in each service.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
          description: ''
  /api/gateway/v1/users/{id}/tokens/:
    get:
      operationId: users_tokens_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /o/:
    get:
      operationId: o_retrieve
      tags:
      - o
      security:
      - OAuth2 Authentication: []
      - SessionAuthentication: []
      - Basic Authentication: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AdditionalRoute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        http_port:
          type: integer
          description: The port on the AAP gateway to listen to traffic on.
        service_cluster:
          type: integer
          description: The AAP Service to route traffic to.
        service_port:
          type: integer
          maximum: 65535
          minimum: 1
          description: The port on the service cluster to route traffic to.
        is_service_https:
          type: boolean
          description: Set this to true if the service cluster requires HTTPS.
        is_internal_route:
          type: boolean
          description: If true, the AAP gateway will only allow other AAP services
            to access this route. Requires gateway auth to be enabled.
        service_path:
          type: string
          description: The URL path on the AAP Service cluster to route traffic to.
          maxLength: 255
        gateway_path:
          type: string
          description: The path on the AAP gateway to listen to traffic on.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: A description of this route.
          maxLength: 255
        enable_gateway_auth:
          type: boolean
          description: If false, the AAP gateway will not insert a gateway token into
            the proxied request.
        node_tags:
          type: string
          description: A comma-separated list of nodes in the service cluster to receive
            traffic from this route.  Leave blank to select all nodes.
          maxLength: 255
      required:
      - gateway_path
      - http_port
      - is_service_https
      - name
      - service_cluster
      - service_path
      - service_port
    AdditionalRouteAssociate:
      type: object
      description: Serializer used for adding objects to a many-to-many relationship
      properties:
        instances:
          type: array
          items:
            type: integer
          description: A list of additional routes to add to this relationship.
      required:
      - instances
    AdditionalRouteDisassociate:
      type: object
      description: Serializer used for removing objects that are currently associated
        via a many-to-many relationship
      properties:
        instances:
          type: array
          items:
            type: integer
          description: A list of additional routes to remove from this relationship.
      required:
      - instances
    AppUrl:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        app_url:
          type: string
          format: uri
          nullable: true
          description: The URL of this application.
          maxLength: 200
      required:
      - name
    AuthTypeEnum:
      enum:
      - JWT
      - BASIC
      - TOKEN
      type: string
      description: |-
        * `JWT` - JWT
        * `BASIC` - Basic auth
        * `TOKEN` - Bearer token
    Authenticator:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        enabled:
          type: boolean
          description: Should this authenticator be enabled.
        create_objects:
          type: boolean
          description: Allow authenticator to create objects (users, teams, organizations).
        remove_users:
          type: boolean
          description: When a user authenticates from this source should they be removed
            from any other groups they were previously added to.
        configuration:
          description: The required configuration for this source.
        type:
          $ref: '#/components/schemas/TypeEnum'
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The order in which an authenticator will be tried. This only
            pertains to username/password authenticators.
        slug:
          type: string
          description: An immutable identifier for the authenticator; used to generate
            the sso uri for sso authenticator types
          pattern: ^[-a-zA-Z0-9_]+$
        auto_migrate_users_to:
          type: integer
          nullable: true
          description: Automatically move users from this authenticator to the target
            authenticator when a matching user logs in via the target authenticator.
            For this to work, the field used for the user ID on both authenticators
            needs to have the same value. This should only be used when migrating
            users between two authentication mechanisms that share the same user database
            (such as when both IDPs share the same LDAP user directory).
      required:
      - name
      - type
    AuthenticatorAssociate:
      type: object
      description: Serializer used for adding objects to a many-to-many relationship
      properties:
        instances:
          type: array
          items:
            type: integer
          description: A list of authenticators to add to this relationship.
      required:
      - instances
    AuthenticatorDisassociate:
      type: object
      description: Serializer used for removing objects that are currently associated
        via a many-to-many relationship
      properties:
        instances:
          type: array
          items:
            type: integer
          description: A list of authenticators to remove from this relationship.
      required:
      - instances
    AuthenticatorMap:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        authenticator:
          type: integer
          description: The authenticator this mapping belongs to.
        map_type:
          allOf:
          - $ref: '#/components/schemas/MapTypeEnum'
          description: |-
            What will the map grant the user? System access (allow) a team or organization membership, the superuser flag or a role in the system.

            * `allow` - allow
            * `is_superuser` - is_superuser
            * `role` - role
            * `organization` - organization
            * `team` - team
        role:
          type: string
          nullable: true
          description: The role this map will grant the authenticating user to the
            targeted object.
          maxLength: 512
        organization:
          type: string
          nullable: true
          description: An organization name this rule works on.
          maxLength: 512
        team:
          type: string
          nullable: true
          description: A team name this rule works on.
          maxLength: 512
        revoke:
          type: boolean
          description: Revoke the permission if a user does not meet this rule.
        triggers:
          description: Trigger information for this rule.
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The order in which this rule should be processed, smaller numbers
            are of higher precedence. Items with the same order will be executed in
            random order.
      required:
      - authenticator
      - name
    AuthenticatorUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        provider:
          type: string
          description: The provider this user authenticated from.
        user:
          type: integer
          description: The local DB user related to this authenticator user.
        claims:
          description: The claims for the user as generated by the authenticator maps
            on their last login.
        last_login_map_results:
          description: A data structure indicating how the authenticator maps were
            evaluated for the last login attempt.
        access_allowed:
          type: boolean
          nullable: true
          description: Tracks if this user was allowed access to the system from the
            authenticator maps.
        uid:
          type: string
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - provider
      - uid
      - user
    AuthenticatorUserMove:
      type: object
      properties:
        new_authenticator:
          type: integer
          description: The ID of the authenticator to which the user will be moved.
        keep_memberships:
          type: boolean
          description: If false, remove the user's existing memberships and let the
            authenticator map for the new authenticator manage it instead.
        merge_with_user:
          type: integer
          nullable: true
          description: An optional user to merge this account with.
        new_uid:
          type: string
          nullable: true
          description: Provide a new UID for the user. This value is used to link
            the users login with the local AAP account.  It must match the user identifier
            from the new authentication provider.
        merge_accounts_with_same_uid:
          type: boolean
          description: If true, automatically merge accounts with the same uid. Mutually
            exclusive with merge_with_user.
        remove_other_authenticators:
          type: boolean
          description: If true, delete any other authenticator_user entries the user
            has from old_authenticator.
      required:
      - keep_memberships
      - merge_accounts_with_same_uid
      - new_authenticator
      - remove_other_authenticators
    AuthenticatorsEnum:
      enum:
      - 1
      description: '* `1` - Local Database Authenticator'
    AuthorizationGrantTypeEnum:
      enum:
      - authorization-code
      - password
      type: string
      description: |-
        * `authorization-code` - Authorization code
        * `password` - Resource owner password-based
    BlankEnum:
      enum:
      - ''
    ClientTypeEnum:
      enum:
      - confidential
      - public
      type: string
      description: |-
        * `confidential` - Confidential
        * `public` - Public
    ClusterInfo:
      type: object
      properties:
        cluster_state:
          type: string
        cluster_slots_assigned:
          type: string
        cluster_slots_ok:
          type: string
        cluster_slots_pfail:
          type: string
        cluster_slots_fail:
          type: string
        cluster_known_nodes:
          type: string
        cluster_size:
          type: string
        cluster_current_epoch:
          type: string
        cluster_my_epoch:
          type: string
        cluster_stats_messages_ping_sent:
          type: string
        cluster_stats_messages_pong_sent:
          type: string
        cluster_stats_messages_sent:
          type: string
        cluster_stats_messages_ping_received:
          type: string
        cluster_stats_messages_pong_received:
          type: string
        cluster_stats_messages_received:
          type: string
    ContentTypeEnum:
      enum:
      - shared.organization
      - shared.team
      type: string
      description: |-
        * `shared.organization` - Organization
        * `shared.team` - Team
    DnsDiscoveryTypeEnum:
      enum:
      - LOGICAL_DNS
      - STRICT_DNS
      type: string
      description: |-
        * `LOGICAL_DNS` - Logical DNS
        * `STRICT_DNS` - Strict DNS
    DnsLookupFamilyEnum:
      enum:
      - V4_ONLY
      - V6_ONLY
      - AUTO
      - ALL
      - V4_PREFERRED
      type: string
      description: |-
        * `V4_ONLY` - IPv4 only
        * `V6_ONLY` - IPv6 only
        * `AUTO` - Auto (IPv6 preferred)
        * `ALL` - All IPv4 and IPv6 addresses
        * `V4_PREFERRED` - IPv4 preferred
    Entry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        operation:
          allOf:
          - $ref: '#/components/schemas/OperationEnum'
          description: |-
            The type of change recorded by the entry (i.e. create/update/delete/etc).

            * `create` - Entity created
            * `update` - Entity updated
            * `delete` - Entity deleted
            * `associate` - Entity was associated with another entity
            * `disassociate` - Entity was disassociated with another entity
        changes:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          nullable: true
          description: |-
            We store strings, we have to convert them back to the correct type.
            Related associations and disassociations will show a null for changes.
          readOnly: true
        content_type:
          type: integer
          description: The content type which was changed in this entry.
        object_id:
          type: string
          nullable: true
          description: The object id which was modified in this entry.
        related_content_type:
          type: integer
          nullable: true
          description: The content type if this entry is recording an many to many
            (M2M) change.
        related_object_id:
          type: string
          nullable: true
          description: The object id of the related model if this entry is for an
            many to many (M2M) change.
        content_type_model:
          type: string
          nullable: true
          readOnly: true
        related_content_type_model:
          type: string
          nullable: true
          readOnly: true
      required:
      - content_type
      - operation
    Finalize:
      type: object
      properties:
        new_username:
          type: string
        aap_password:
          type: string
    HTTPPort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        number:
          type: integer
          maximum: 65535
          minimum: 1
          description: The port number to listen on.
        use_https:
          type: boolean
          description: Secure this port with HTTPS.
        is_api_port:
          type: boolean
          description: If true, this port will be used to serve the AAP service APIs.
            Only one port can be the API port.
      required:
      - name
      - number
    MapTypeEnum:
      enum:
      - allow
      - is_superuser
      - role
      - organization
      - team
      type: string
      description: |-
        * `allow` - allow
        * `is_superuser` - is_superuser
        * `role` - role
        * `organization` - organization
        * `team` - team
    ModeEnum:
      enum:
      - cluster
      - standalone
      - Unknown
      type: string
      description: |-
        * `cluster` - cluster
        * `standalone` - standalone
        * `Unknown` - Unknown
    NullEnum:
      enum:
      - null
    OAuth2Application:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        client_id:
          type: string
          readOnly: true
        redirect_uris:
          type: string
          description: Allowed URIs list, space separated
        post_logout_redirect_uris:
          type: string
          description: Allowed Post Logout URIs list, space separated
        algorithm:
          oneOf:
          - $ref: '#/components/schemas/OAuth2ApplicationAlgorithmEnum'
          - $ref: '#/components/schemas/BlankEnum'
        user:
          type: integer
          nullable: true
          description: The user who created the application.
        description:
          type: string
          description: A description of this application.
        organization:
          type: integer
          description: Organization containing this application.
        app_url:
          type: string
          format: uri
          nullable: true
          title: Application URL
          description: The URL of this application.
          maxLength: 200
        client_secret:
          type: string
          readOnly: true
          description: Hashed on Save. Copy it now if this is a new secret.
        client_type:
          allOf:
          - $ref: '#/components/schemas/ClientTypeEnum'
          description: |-
            Set to Public or Confidential depending on how secure the client device is.

            * `confidential` - Confidential
            * `public` - Public
        skip_authorization:
          type: boolean
          description: Set True to skip authorization step for completely trusted
            applications.
        authorization_grant_type:
          allOf:
          - $ref: '#/components/schemas/AuthorizationGrantTypeEnum'
          description: |-
            The Grant type the user must use for acquire tokens for this application.

            * `authorization-code` - Authorization code
            * `password` - Resource owner password-based
      required:
      - authorization_grant_type
      - client_type
      - name
      - organization
    OAuth2ApplicationAlgorithmEnum:
      enum:
      - RS256
      - HS256
      type: string
      description: |-
        * `` - No OIDC support
        * `RS256` - RSA with SHA-2 256
        * `HS256` - HMAC with SHA-2 256
    OAuth2Token:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        expires:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          readOnly: true
          description: The user representing the token owner.
        application:
          type: integer
          nullable: true
          description: The related application. If None, this is a user token instead
            of an application token.
        description:
          type: string
          description: A description for this token.
        last_used:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: A timestamp of when this token was last used.
        scope:
          type: string
          description: Allowed scopes, further restricts user permissions. Must be
            a simple space-separated string with allowed scopes ['read', 'write'].
          maxLength: 32
        token:
          type: string
          readOnly: true
          description: The generated token value.
        refresh_token:
          type: string
          nullable: true
          readOnly: true
    OperationEnum:
      enum:
      - create
      - update
      - delete
      - associate
      - disassociate
      type: string
      description: |-
        * `create` - Entity created
        * `update` - Entity updated
        * `delete` - Entity deleted
        * `associate` - Entity was associated with another entity
        * `disassociate` - Entity was disassociated with another entity
    Organization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        description:
          type: string
          description: The organization description.
        managed:
          type: boolean
          readOnly: true
          description: Indicates if this organization is managed by the system. It
            cannot be modified once created.
      required:
      - name
    PaginatedAdditionalRouteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalRoute'
    PaginatedAppUrlList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppUrl'
    PaginatedAuthenticatorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Authenticator'
    PaginatedAuthenticatorMapList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticatorMap'
    PaginatedAuthenticatorUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticatorUser'
    PaginatedEntryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Entry'
    PaginatedHTTPPortList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HTTPPort'
    PaginatedOAuth2ApplicationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OAuth2Application'
    PaginatedOAuth2TokenList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OAuth2Token'
    PaginatedOrganizationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    PaginatedResourceListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResourceList'
    PaginatedResourceTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
    PaginatedRoleDefinitionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoleDefinition'
    PaginatedRoleTeamAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoleTeamAssignment'
    PaginatedRoleUserAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoleUserAssignment'
    PaginatedServiceAPIRouteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceAPIRoute'
    PaginatedServiceClusterList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceCluster'
    PaginatedServiceKeyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceKey'
    PaginatedServiceNodeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceNode'
    PaginatedServiceTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceType'
    PaginatedSettingSectionListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SettingSectionList'
    PaginatedTeamList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedAdditionalRoute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        http_port:
          type: integer
          description: The port on the AAP gateway to listen to traffic on.
        service_cluster:
          type: integer
          description: The AAP Service to route traffic to.
        service_port:
          type: integer
          maximum: 65535
          minimum: 1
          description: The port on the service cluster to route traffic to.
        is_service_https:
          type: boolean
          description: Set this to true if the service cluster requires HTTPS.
        is_internal_route:
          type: boolean
          description: If true, the AAP gateway will only allow other AAP services
            to access this route. Requires gateway auth to be enabled.
        service_path:
          type: string
          description: The URL path on the AAP Service cluster to route traffic to.
          maxLength: 255
        gateway_path:
          type: string
          description: The path on the AAP gateway to listen to traffic on.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: A description of this route.
          maxLength: 255
        enable_gateway_auth:
          type: boolean
          description: If false, the AAP gateway will not insert a gateway token into
            the proxied request.
        node_tags:
          type: string
          description: A comma-separated list of nodes in the service cluster to receive
            traffic from this route.  Leave blank to select all nodes.
          maxLength: 255
    PatchedAuthenticator:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        enabled:
          type: boolean
          description: Should this authenticator be enabled.
        create_objects:
          type: boolean
          description: Allow authenticator to create objects (users, teams, organizations).
        remove_users:
          type: boolean
          description: When a user authenticates from this source should they be removed
            from any other groups they were previously added to.
        configuration:
          description: The required configuration for this source.
        type:
          $ref: '#/components/schemas/TypeEnum'
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The order in which an authenticator will be tried. This only
            pertains to username/password authenticators.
        slug:
          type: string
          description: An immutable identifier for the authenticator; used to generate
            the sso uri for sso authenticator types
          pattern: ^[-a-zA-Z0-9_]+$
        auto_migrate_users_to:
          type: integer
          nullable: true
          description: Automatically move users from this authenticator to the target
            authenticator when a matching user logs in via the target authenticator.
            For this to work, the field used for the user ID on both authenticators
            needs to have the same value. This should only be used when migrating
            users between two authentication mechanisms that share the same user database
            (such as when both IDPs share the same LDAP user directory).
    PatchedAuthenticatorMap:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        authenticator:
          type: integer
          description: The authenticator this mapping belongs to.
        map_type:
          allOf:
          - $ref: '#/components/schemas/MapTypeEnum'
          description: |-
            What will the map grant the user? System access (allow) a team or organization membership, the superuser flag or a role in the system.

            * `allow` - allow
            * `is_superuser` - is_superuser
            * `role` - role
            * `organization` - organization
            * `team` - team
        role:
          type: string
          nullable: true
          description: The role this map will grant the authenticating user to the
            targeted object.
          maxLength: 512
        organization:
          type: string
          nullable: true
          description: An organization name this rule works on.
          maxLength: 512
        team:
          type: string
          nullable: true
          description: A team name this rule works on.
          maxLength: 512
        revoke:
          type: boolean
          description: Revoke the permission if a user does not meet this rule.
        triggers:
          description: Trigger information for this rule.
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The order in which this rule should be processed, smaller numbers
            are of higher precedence. Items with the same order will be executed in
            random order.
    PatchedHTTPPort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        number:
          type: integer
          maximum: 65535
          minimum: 1
          description: The port number to listen on.
        use_https:
          type: boolean
          description: Secure this port with HTTPS.
        is_api_port:
          type: boolean
          description: If true, this port will be used to serve the AAP service APIs.
            Only one port can be the API port.
    PatchedOAuth2Application:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        client_id:
          type: string
          readOnly: true
        redirect_uris:
          type: string
          description: Allowed URIs list, space separated
        post_logout_redirect_uris:
          type: string
          description: Allowed Post Logout URIs list, space separated
        algorithm:
          oneOf:
          - $ref: '#/components/schemas/OAuth2ApplicationAlgorithmEnum'
          - $ref: '#/components/schemas/BlankEnum'
        user:
          type: integer
          nullable: true
          description: The user who created the application.
        description:
          type: string
          description: A description of this application.
        organization:
          type: integer
          description: Organization containing this application.
        app_url:
          type: string
          format: uri
          nullable: true
          title: Application URL
          description: The URL of this application.
          maxLength: 200
        client_secret:
          type: string
          readOnly: true
          description: Hashed on Save. Copy it now if this is a new secret.
        client_type:
          allOf:
          - $ref: '#/components/schemas/ClientTypeEnum'
          description: |-
            Set to Public or Confidential depending on how secure the client device is.

            * `confidential` - Confidential
            * `public` - Public
        skip_authorization:
          type: boolean
          description: Set True to skip authorization step for completely trusted
            applications.
        authorization_grant_type:
          allOf:
          - $ref: '#/components/schemas/AuthorizationGrantTypeEnum'
          description: |-
            The Grant type the user must use for acquire tokens for this application.

            * `authorization-code` - Authorization code
            * `password` - Resource owner password-based
    PatchedOAuth2Token:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        expires:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          readOnly: true
          description: The user representing the token owner.
        application:
          type: integer
          nullable: true
          description: The related application. If None, this is a user token instead
            of an application token.
        description:
          type: string
          description: A description for this token.
        last_used:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: A timestamp of when this token was last used.
        scope:
          type: string
          description: Allowed scopes, further restricts user permissions. Must be
            a simple space-separated string with allowed scopes ['read', 'write'].
          maxLength: 32
        token:
          type: string
          readOnly: true
          description: The generated token value.
        refresh_token:
          type: string
          nullable: true
          readOnly: true
    PatchedOrganization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        description:
          type: string
          description: The organization description.
        managed:
          type: boolean
          readOnly: true
          description: Indicates if this organization is managed by the system. It
            cannot be modified once created.
    PatchedResource:
      type: object
      properties:
        object_id:
          type: string
          readOnly: true
          description: The object id for this resource.
        name:
          type: string
          readOnly: true
          nullable: true
          description: The name of this resource.
        ansible_id:
          type: string
          format: uuid
          description: A unique ID identifying this resource by the resource server.
        service_id:
          type: string
          format: uuid
          description: ID of the service responsible for managing this resource.
        is_partially_migrated:
          type: boolean
          description: A flag indicating that the resource has been copied into the
            resource server, but the service_id hasn't been updated yet.
        resource_type:
          type: string
        has_serializer:
          type: boolean
          readOnly: true
        resource_data: {}
        url:
          type: string
          readOnly: true
        additional_data:
          type: string
          readOnly: true
    PatchedRoleDefinition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionsEnum'
        content_type:
          nullable: true
          description: |-
            The type of resource this applies to.

            * `shared.organization` - Organization
            * `shared.team` - Team
          oneOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        name:
          type: string
          description: The name of this role.
        description:
          type: string
          description: A description of this role.
        managed:
          type: boolean
          readOnly: true
          description: Is this role managed by the system (not changeable by the users).
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
    PatchedServiceAPIRoute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        http_port:
          type: integer
          description: The port on the AAP gateway to listen to traffic on.
        service_cluster:
          type: integer
          description: The AAP Service to route traffic to.
        service_port:
          type: integer
          maximum: 65535
          minimum: 1
          description: The port on the service cluster to route traffic to.
        is_service_https:
          type: boolean
          description: Set this to true if the service cluster requires HTTPS.
        is_internal_route:
          type: boolean
          description: If true, the AAP gateway will only allow other AAP services
            to access this route. Requires gateway auth to be enabled.
        service_path:
          type: string
          description: The URL path on the AAP Service cluster to route traffic to.
          maxLength: 255
        gateway_path:
          type: string
          readOnly: true
          description: The path on the AAP gateway to listen to traffic on.
        description:
          type: string
          nullable: true
          description: A description of this route.
          maxLength: 255
        api_slug:
          type: string
          description: An internally generated API slug for this Service API Route.
          maxLength: 20
          pattern: ^[-a-zA-Z0-9_]+$
        enable_gateway_auth:
          type: boolean
          description: If false, the AAP gateway will not insert a gateway token into
            the proxied request.
        order:
          type: integer
          maximum: 100
          minimum: 0
          description: The order to apply the routes in; lower numbers are first.
            Items with the same value have no guaranteed order
        node_tags:
          type: string
          description: A comma-separated list of nodes in the service cluster to receive
            traffic from this route.  Leave blank to select all nodes.
          maxLength: 255
    PatchedServiceCluster:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        service_type:
          type: integer
          description: The AAP service type of this service cluster.
        service_id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
          description: The unique service ID provided by the service.
        auth_type:
          allOf:
          - $ref: '#/components/schemas/AuthTypeEnum'
          description: |-
            The authorization type for this service.

            * `JWT` - JWT
            * `BASIC` - Basic auth
            * `TOKEN` - Bearer token
        upstream_hostname:
          type: string
          description: Set this value to enable server name identification on associated
            routes.
          maxLength: 255
        dns_discovery_type:
          allOf:
          - $ref: '#/components/schemas/DnsDiscoveryTypeEnum'
          description: |-
            The DNS service discovery type for this service.

            * `LOGICAL_DNS` - Logical DNS
            * `STRICT_DNS` - Strict DNS
        dns_lookup_family:
          allOf:
          - $ref: '#/components/schemas/DnsLookupFamilyEnum'
          description: |-
            DNS lookup type for this service.

            * `V4_ONLY` - IPv4 only
            * `V6_ONLY` - IPv6 only
            * `AUTO` - Auto (IPv6 preferred)
            * `ALL` - All IPv4 and IPv6 addresses
            * `V4_PREFERRED` - IPv4 preferred
        outlier_detection_enabled:
          type: boolean
          description: If true, outlier detection will be used to determine if a node
            is unhealthy and should be ejected from the cluster.
        outlier_detection_consecutive_5xx:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The number of consecutive 5xx responses to consider a node
            unhealthy.
        outlier_detection_interval_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The time interval between ejection analysis sweeps.
        outlier_detection_base_ejection_time_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The base time a node will be ejected for.
        outlier_detection_max_ejection_percent:
          type: integer
          maximum: 100
          minimum: 0
          description: The maximum percent of nodes that can be ejected from the cluster.
        health_checks_enabled:
          type: boolean
          description: If true, health checks will be used to determine if a node
            is healthy.
        health_check_timeout_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The time to wait for a health check to complete.
        health_check_interval_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The time between health check requests.
        health_check_unhealthy_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The number of consecutive failed health checks before a node
            is considered unhealthy.
        health_check_healthy_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The number of consecutive successful health checks before a
            node is considered healthy.
        healthy_panic_threshold:
          type: integer
          maximum: 100
          minimum: 0
          description: The percentage of failed hosts when the proxy will panic and
            start routing traffic to all nodes. Set to 0 to disable this.
    PatchedServiceKey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          nullable: true
          description: The name of this resource.
          maxLength: 512
        service_cluster:
          type: integer
          description: The service cluster this key is for
        is_active:
          type: boolean
          description: Is this service key active.
        algorithm:
          allOf:
          - $ref: '#/components/schemas/ServiceKeyAlgorithmEnum'
          default: HS256
        secret_length:
          type: integer
          maximum: 512
          minimum: 64
          writeOnly: true
          default: 64
        mark_previous_inactive:
          type: boolean
          writeOnly: true
        secret:
          type: string
          readOnly: true
          description: The secret will only be plain text on generation, afterwards
            it will be encrypted.
    PatchedServiceNode:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        address:
          type: string
          description: The network address to route traffic for this service to.
          maxLength: 255
        service_cluster:
          type: integer
          description: The AAP Service cluster that this node belongs to.
        tags:
          type: string
          description: A comma-separated list of roles to assign to a node; to be
            selective about which routes point to it.
          maxLength: 255
    PatchedServiceType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        login_path:
          type: string
          nullable: true
          description: API path to login for service, ex. /v1/auth/session/login/
          maxLength: 255
        logout_path:
          type: string
          nullable: true
          description: API path to logout for service, ex. /logout/
          maxLength: 255
        ping_url:
          type: string
          nullable: true
          description: URL to the ping/status page of the service, ex. /pulp/api/v3/status/
          maxLength: 255
        service_index_path:
          type: string
          nullable: true
          description: API path to resource service index endpoint, ex. /v2/service-index/
          maxLength: 255
    PatchedTeam:
      type: object
      description: |-
        Class to be used by apps to check permissions to related objects

        This is a core part of integrating permission checks with REST APIs.
        Full enablement of checks is accomplished by this plus
        the permission class.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        organization:
          type: integer
          description: The organization of this team.
        description:
          type: string
          description: The team description.
    PatchedUser:
      type: object
      description: Disallows editing of system user and enforces superuser requirement.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        password:
          type: string
          maxLength: 128
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_platform_auditor:
          type: boolean
          readOnly: true
        authenticators:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/AuthenticatorsEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
          writeOnly: true
          nullable: true
        authenticator_uid:
          type: string
          writeOnly: true
        managed:
          type: boolean
          readOnly: true
          description: Indicates if this user is managed by the system. It cannot
            be modified once created.
    PermissionsEnum:
      enum:
      - shared.add_organization
      - shared.add_team
      - shared.change_organization
      - shared.change_team
      - shared.delete_organization
      - shared.delete_team
      - shared.member_organization
      - shared.member_team
      - shared.view_organization
      - shared.view_team
      type: string
      description: |-
        * `shared.add_organization` - shared.add_organization
        * `shared.add_team` - shared.add_team
        * `shared.change_organization` - shared.change_organization
        * `shared.change_team` - shared.change_team
        * `shared.delete_organization` - shared.delete_organization
        * `shared.delete_team` - shared.delete_team
        * `shared.member_organization` - shared.member_organization
        * `shared.member_team` - shared.member_team
        * `shared.view_organization` - shared.view_organization
        * `shared.view_team` - shared.view_team
    Ping:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        version:
          type: string
        pong:
          type: string
          format: date-time
        db_connected:
          type: boolean
        db_exception:
          type: string
        proxy_connected:
          type: boolean
        proxy_status_code:
          type: integer
        proxy_exception_type:
          type: string
    RedisResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        mode:
          $ref: '#/components/schemas/ModeEnum'
        ping:
          type: boolean
        cluster_info:
          $ref: '#/components/schemas/ClusterInfo'
    Resource:
      type: object
      properties:
        object_id:
          type: string
          readOnly: true
          description: The object id for this resource.
        name:
          type: string
          readOnly: true
          nullable: true
          description: The name of this resource.
        ansible_id:
          type: string
          format: uuid
          description: A unique ID identifying this resource by the resource server.
        service_id:
          type: string
          format: uuid
          description: ID of the service responsible for managing this resource.
        is_partially_migrated:
          type: boolean
          description: A flag indicating that the resource has been copied into the
            resource server, but the service_id hasn't been updated yet.
        resource_type:
          type: string
        has_serializer:
          type: boolean
          readOnly: true
        resource_data: {}
        url:
          type: string
          readOnly: true
        additional_data:
          type: string
          readOnly: true
      required:
      - resource_data
    ResourceList:
      type: object
      properties:
        object_id:
          type: string
          readOnly: true
          description: The object id for this resource.
        name:
          type: string
          readOnly: true
          nullable: true
          description: The name of this resource.
        ansible_id:
          type: string
          format: uuid
          description: A unique ID identifying this resource by the resource server.
        service_id:
          type: string
          format: uuid
          description: ID of the service responsible for managing this resource.
        is_partially_migrated:
          type: boolean
          description: A flag indicating that the resource has been copied into the
            resource server, but the service_id hasn't been updated yet.
        resource_type:
          type: string
        has_serializer:
          type: boolean
          readOnly: true
        resource_data:
          writeOnly: true
        url:
          type: string
          readOnly: true
      required:
      - resource_data
    ResourceType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          description: The name of this resource type.
        externally_managed:
          type: boolean
          description: Is this resource type managed externally from this service.
        shared_resource_type:
          type: string
          nullable: true
          readOnly: true
        url:
          type: string
          readOnly: true
      required:
      - externally_managed
    RoleDefinition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionsEnum'
        content_type:
          nullable: true
          description: |-
            The type of resource this applies to.

            * `shared.organization` - Organization
            * `shared.team` - Team
          oneOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        name:
          type: string
          description: The name of this role.
        description:
          type: string
          description: A description of this role.
        managed:
          type: boolean
          readOnly: true
          description: Is this role managed by the system (not changeable by the users).
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
      required:
      - name
      - permissions
    RoleDefinitionDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionsEnum'
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          readOnly: true
          description: |-
            The type of resource this applies to.

            * `shared.organization` - Organization
            * `shared.team` - Team
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        name:
          type: string
          description: The name of this role.
        description:
          type: string
          description: A description of this role.
        managed:
          type: boolean
          readOnly: true
          description: Is this role managed by the system (not changeable by the users).
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
      required:
      - name
      - permissions
    RoleMetadata:
      type: object
      properties:
        allowed_permissions:
          type: object
          additionalProperties: {}
          description: A List of permissions allowed for a role definition, given
            its content type.
      required:
      - allowed_permissions
    RoleTeamAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          readOnly: true
          description: |-
            The type of resource this applies to.

            * `shared.organization` - Organization
            * `shared.team` - Team
        object_id:
          type: string
          nullable: true
          description: The primary key of the object this assignment applies to; null
            value indicates system-wide assignment.
        object_ansible_id:
          type: string
          format: uuid
          nullable: true
          description: The resource id of the object this role applies to. An alternative
            to the object_id field.
        role_definition:
          type: integer
          description: The role definition which defines permissions conveyed by this
            assignment.
        team:
          type: integer
        team_ansible_id:
          type: string
          format: uuid
          description: The resource ID of the team who will receive permissions from
            this assignment. An alternative to team field.
      required:
      - role_definition
    RoleUserAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          readOnly: true
          description: |-
            The type of resource this applies to.

            * `shared.organization` - Organization
            * `shared.team` - Team
        object_id:
          type: string
          nullable: true
          description: The primary key of the object this assignment applies to; null
            value indicates system-wide assignment.
        object_ansible_id:
          type: string
          format: uuid
          nullable: true
          description: The resource id of the object this role applies to. An alternative
            to the object_id field.
        role_definition:
          type: integer
          description: The role definition which defines permissions conveyed by this
            assignment.
        user:
          type: integer
        user_ansible_id:
          type: string
          format: uuid
          nullable: true
          description: The resource ID of the user who will receive permissions from
            this assignment. An alternative to user field.
      required:
      - role_definition
    ServiceAPIRoute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        http_port:
          type: integer
          description: The port on the AAP gateway to listen to traffic on.
        service_cluster:
          type: integer
          description: The AAP Service to route traffic to.
        service_port:
          type: integer
          maximum: 65535
          minimum: 1
          description: The port on the service cluster to route traffic to.
        is_service_https:
          type: boolean
          description: Set this to true if the service cluster requires HTTPS.
        is_internal_route:
          type: boolean
          description: If true, the AAP gateway will only allow other AAP services
            to access this route. Requires gateway auth to be enabled.
        service_path:
          type: string
          description: The URL path on the AAP Service cluster to route traffic to.
          maxLength: 255
        gateway_path:
          type: string
          readOnly: true
          description: The path on the AAP gateway to listen to traffic on.
        description:
          type: string
          nullable: true
          description: A description of this route.
          maxLength: 255
        api_slug:
          type: string
          description: An internally generated API slug for this Service API Route.
          maxLength: 20
          pattern: ^[-a-zA-Z0-9_]+$
        enable_gateway_auth:
          type: boolean
          description: If false, the AAP gateway will not insert a gateway token into
            the proxied request.
        order:
          type: integer
          maximum: 100
          minimum: 0
          description: The order to apply the routes in; lower numbers are first.
            Items with the same value have no guaranteed order
        node_tags:
          type: string
          description: A comma-separated list of nodes in the service cluster to receive
            traffic from this route.  Leave blank to select all nodes.
          maxLength: 255
      required:
      - api_slug
      - http_port
      - is_service_https
      - name
      - service_cluster
      - service_path
      - service_port
    ServiceCluster:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        service_type:
          type: integer
          description: The AAP service type of this service cluster.
        service_id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
          description: The unique service ID provided by the service.
        auth_type:
          allOf:
          - $ref: '#/components/schemas/AuthTypeEnum'
          description: |-
            The authorization type for this service.

            * `JWT` - JWT
            * `BASIC` - Basic auth
            * `TOKEN` - Bearer token
        upstream_hostname:
          type: string
          description: Set this value to enable server name identification on associated
            routes.
          maxLength: 255
        dns_discovery_type:
          allOf:
          - $ref: '#/components/schemas/DnsDiscoveryTypeEnum'
          description: |-
            The DNS service discovery type for this service.

            * `LOGICAL_DNS` - Logical DNS
            * `STRICT_DNS` - Strict DNS
        dns_lookup_family:
          allOf:
          - $ref: '#/components/schemas/DnsLookupFamilyEnum'
          description: |-
            DNS lookup type for this service.

            * `V4_ONLY` - IPv4 only
            * `V6_ONLY` - IPv6 only
            * `AUTO` - Auto (IPv6 preferred)
            * `ALL` - All IPv4 and IPv6 addresses
            * `V4_PREFERRED` - IPv4 preferred
        outlier_detection_enabled:
          type: boolean
          description: If true, outlier detection will be used to determine if a node
            is unhealthy and should be ejected from the cluster.
        outlier_detection_consecutive_5xx:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The number of consecutive 5xx responses to consider a node
            unhealthy.
        outlier_detection_interval_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The time interval between ejection analysis sweeps.
        outlier_detection_base_ejection_time_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The base time a node will be ejected for.
        outlier_detection_max_ejection_percent:
          type: integer
          maximum: 100
          minimum: 0
          description: The maximum percent of nodes that can be ejected from the cluster.
        health_checks_enabled:
          type: boolean
          description: If true, health checks will be used to determine if a node
            is healthy.
        health_check_timeout_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The time to wait for a health check to complete.
        health_check_interval_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The time between health check requests.
        health_check_unhealthy_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The number of consecutive failed health checks before a node
            is considered unhealthy.
        health_check_healthy_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The number of consecutive successful health checks before a
            node is considered healthy.
        healthy_panic_threshold:
          type: integer
          maximum: 100
          minimum: 0
          description: The percentage of failed hosts when the proxy will panic and
            start routing traffic to all nodes. Set to 0 to disable this.
      required:
      - name
      - service_type
    ServiceKey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          nullable: true
          description: The name of this resource.
          maxLength: 512
        service_cluster:
          type: integer
          description: The service cluster this key is for
        is_active:
          type: boolean
          description: Is this service key active.
        algorithm:
          allOf:
          - $ref: '#/components/schemas/ServiceKeyAlgorithmEnum'
          default: HS256
        secret_length:
          type: integer
          maximum: 512
          minimum: 64
          writeOnly: true
          default: 64
        mark_previous_inactive:
          type: boolean
          writeOnly: true
        secret:
          type: string
          readOnly: true
          description: The secret will only be plain text on generation, afterwards
            it will be encrypted.
      required:
      - mark_previous_inactive
      - service_cluster
    ServiceKeyAlgorithmEnum:
      enum:
      - HS256
      - HS384
      - HS512
      type: string
      description: |-
        * `HS256` - HMAC with SHA256
        * `HS384` - HMAC with SHA384
        * `HS512` - HMAC with SHA512
    ServiceKeysStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        time:
          type: string
          format: date-time
        services:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StatusService'
      required:
      - services
      - time
    ServiceNode:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        address:
          type: string
          description: The network address to route traffic for this service to.
          maxLength: 255
        service_cluster:
          type: integer
          description: The AAP Service cluster that this node belongs to.
        tags:
          type: string
          description: A comma-separated list of roles to assign to a node; to be
            selective about which routes point to it.
          maxLength: 255
      required:
      - address
      - name
      - service_cluster
    ServiceType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        login_path:
          type: string
          nullable: true
          description: API path to login for service, ex. /v1/auth/session/login/
          maxLength: 255
        logout_path:
          type: string
          nullable: true
          description: API path to logout for service, ex. /logout/
          maxLength: 255
        ping_url:
          type: string
          nullable: true
          description: URL to the ping/status page of the service, ex. /pulp/api/v3/status/
          maxLength: 255
        service_index_path:
          type: string
          nullable: true
          description: API path to resource service index endpoint, ex. /v2/service-index/
          maxLength: 255
      required:
      - name
    ServiceTypeAssociate:
      type: object
      description: Serializer used for adding objects to a many-to-many relationship
      properties:
        instances:
          type: array
          items:
            type: integer
          description: A list of service types to add to this relationship.
      required:
      - instances
    ServiceTypeDisassociate:
      type: object
      description: Serializer used for removing objects that are currently associated
        via a many-to-many relationship
      properties:
        instances:
          type: array
          items:
            type: integer
          description: A list of service types to remove from this relationship.
      required:
      - instances
    SettingPreference:
      type: object
      properties:
        section:
          type: string
          nullable: true
          title: Section Name
          maxLength: 150
        name:
          type: string
          maxLength: 150
        value:
          description: |-
            Given the *incoming* primitive data, return the value for this field
            that should be validated and transformed to a native value.
          readOnly: true
      required:
      - name
    SettingSection:
      type: object
      properties:
        gateway_token_name:
          type: string
          default: X-DAB-JW-TOKEN
          description: 'The header name to push from the proxy to the backend service.
            WARNING: if this is changed, backends must be updated to compensate!'
        gateway_access_token_expiration:
          type: integer
          default: 60000
          description: How long the access tokens are valid for.
        jwt_expiration_buffer_in_seconds:
          type: integer
          default: 3000
          description: The number of seconds before a JWT token's expiration to revoke
            it from the cache.
        gateway_basic_auth_enabled:
          type: boolean
          default: true
          description: Enable basic auth to the gateway API.
        gateway_proxy_url:
          type: string
          format: uri
          default: https://localhost:9080
          description: The URL to the gateway proxy layer.
        gateway_proxy_url_ignore_cert:
          type: boolean
          default: false
          description: Ignore certificate to the gateway proxy layer.
        jwt_private_key:
          type: string
          default: ''
          description: The JWT private key.
        jwt_public_key:
          type: string
          readOnly: true
          default: ''
          description: The JWT public key (read-only).
        status_endpoint_backend_timeout_seconds:
          type: integer
          default: 5
          description: The timeout (in seconds) for the status endpoint to wait when
            trying to connect to a backend.
        status_endpoint_backend_verify:
          type: boolean
          default: true
          description: Should SSL certificates of the services be verified when calling
            individual nodes for statuses.
        resource_client_request_timeout:
          type: number
          format: double
          minimum: 0.0
          default: 2.0
          description: The timeout (in seconds) before the resource client will drop
            requests after forming connections.
        request_timeout:
          type: integer
          default: 30
          description: The timeout (in seconds) before the proxy will report a timeout
            and generate a 504.
        password_min_length:
          type: integer
          maximum: 100
          minimum: 0
          default: 0
          title: Password minimum length
          description: How long does a local password have to be.
        password_min_digits:
          type: integer
          maximum: 100
          minimum: 0
          default: 0
          title: Password minimum numerical digits
          description: How many numerical characters need to be in a local password.
        password_min_upper:
          type: integer
          maximum: 100
          minimum: 0
          default: 0
          title: Password minimum uppercase letters
          description: How many upper case characters need to be in a local password.
        password_min_special:
          type: integer
          maximum: 100
          minimum: 0
          default: 0
          title: Password minimum special characters
          description: How many special characters need to be in a local password.
        allow_admins_to_set_insecure:
          type: boolean
          default: false
          title: Allow system administrators to set insecure user passwords
          description: Can a superuser account save an insecure password.
        LOGIN_REDIRECT_OVERRIDE:
          type: string
          format: uri
          default: ''
          description: The URL to which unauthorized users will be redirected to log
            in. If blank, users will be sent to the login page.
        custom_login_info:
          type: string
          default: ''
          description: Provide specific information (such as a legal notice or a disclaimer)
            to a text box in the login modal.
        custom_logo:
          type: string
          default: ''
          description: Provide an image file for setting up a custom logo (must be
            a data URL with a base64-encoded GIF, PNG or JPEG image).
        SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL:
          type: boolean
          default: false
          description: Enabling this setting will tell social auth to use the full
            email as username instead of the full name.
        SESSION_COOKIE_AGE:
          type: integer
          maximum: 30000000000
          minimum: 60
          format: int64
          default: 900
          description: The time in seconds before a session expires.
        DEFAULT_PAGE_SIZE:
          type: integer
          default: 50
          description: The default number of items to show on a list page.
        MAX_PAGE_SIZE:
          type: integer
          default: 200
          description: The maximum number of items allowed on a list page.
        ALLOW_OAUTH2_FOR_EXTERNAL_USERS:
          type: boolean
          default: false
          title: Allow external users to create OAuth2 tokens
          description: For security reasons, users from external auth providers (LDAP,
            SAML, SSO, Radius, and others) are not allowed to create OAuth2 tokens.
            To change this behavior, enable this setting. Existing tokens will not
            be deleted when this setting is toggled off.
        CONTROLLER_SSO_URL:
          type: string
          default: ''
          description: The URL that is used to kick off authentication for Controller
            SSO that was configured prior to AAP 2.5.
        AUTOMATION_HUB_SSO_URL:
          type: string
          default: ''
          description: The URL that is used to kick off authentication for Automation
            Hub SSO that was configured prior to AAP 2.5.
        INSIGHTS_TRACKING_STATE:
          type: boolean
          default: true
          description: Enables the service to gather data on automation and send it
            to Automation Analytics.
        RED_HAT_CONSOLE_URL:
          type: string
          format: uri
          default: https://console.redhat.com
          description: This setting is used to to configure the upload URL for data
            collection for Automation Analytics.
        REDHAT_USERNAME:
          type: string
          default: ''
          description: This username is used to send data to Automation Analytics/
        REDHAT_PASSWORD:
          type: string
          default: ''
          description: This password is used to send data to Automation Analytics.'
        SUBSCRIPTIONS_USERNAME:
          type: string
          default: ''
          description: This username is used to retrieve subscription and content
            information.
        SUBSCRIPTIONS_PASSWORD:
          type: string
          default: ''
          description: This password is used to retrieve subscription and content
            information.'
        AUTOMATION_ANALYTICS_GATHER_INTERVAL:
          type: integer
          maximum: 30000000000
          minimum: 1800
          format: int64
          default: 14400
          description: The maximum number of items allowed on a list page
    SettingSectionList:
      type: object
      description: Serialize list of settings category
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
    Status:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        time:
          type: string
          format: date-time
        services:
          type: array
          items:
            $ref: '#/components/schemas/StatusService'
      required:
      - services
      - time
    StatusEnum:
      enum:
      - good
      - degraded
      - failed
      type: string
      description: |-
        * `good` - good
        * `degraded` - degraded
        * `failed` - failed
    StatusNode:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        url:
          type: string
        exception:
          type: string
        response:
          $ref: '#/components/schemas/Ping'
        response_code:
          type: integer
        node_id:
          type: string
        hostname:
          type: string
        flags:
          type: string
        master_id:
          type: string
        last_ping_sent:
          type: string
        last_pong_rcvd:
          type: string
        epoch:
          type: string
        slots:
          type: array
          items:
            type: array
            items:
              type: string
        migrations:
          type: array
          items:
            type: string
        connected:
          type: boolean
        body:
          type: string
    StatusResponseOptions:
      oneOf:
      - $ref: '#/components/schemas/Status'
      - $ref: '#/components/schemas/ServiceKeysStatus'
    StatusService:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        service_name:
          type: string
        nodes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StatusNode'
        response:
          $ref: '#/components/schemas/RedisResponse'
      required:
      - nodes
    Team:
      type: object
      description: |-
        Class to be used by apps to check permissions to related objects

        This is a core part of integrating permission checks with REST APIs.
        Full enablement of checks is accomplished by this plus
        the permission class.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        name:
          type: string
          description: The name of this resource.
          maxLength: 512
        organization:
          type: integer
          description: The organization of this team.
        description:
          type: string
          description: The team description.
      required:
      - name
      - organization
    TypeEnum:
      enum:
      - ansible_base.authentication.authenticator_plugins.oidc
      - ansible_base.authentication.authenticator_plugins.ldap
      - ansible_base.authentication.authenticator_plugins.local
      - ansible_base.authentication.authenticator_plugins.github_team
      - ansible_base.authentication.authenticator_plugins.saml
      - ansible_base.authentication.authenticator_plugins.github_enterprise_org
      - ansible_base.authentication.authenticator_plugins.google_oauth2
      - ansible_base.authentication.authenticator_plugins.keycloak
      - ansible_base.authentication.authenticator_plugins.radius
      - ansible_base.authentication.authenticator_plugins.github_enterprise_team
      - ansible_base.authentication.authenticator_plugins.github
      - ansible_base.authentication.authenticator_plugins.azuread
      - ansible_base.authentication.authenticator_plugins.tacacs
      - ansible_base.authentication.authenticator_plugins.github_enterprise
      - ansible_base.authentication.authenticator_plugins.github_org
      - aap_gateway_api.authentication.authenticator_plugins.legacy_external_password
      - aap_gateway_api.authentication.authenticator_plugins.legacy_sso
      - aap_gateway_api.authentication.authenticator_plugins.legacy_password
      - aap_gateway_api.authentication.authenticator_plugins.controller_admin
      type: string
      description: |-
        * `ansible_base.authentication.authenticator_plugins.oidc` - ansible_base.authentication.authenticator_plugins.oidc
        * `ansible_base.authentication.authenticator_plugins.ldap` - ansible_base.authentication.authenticator_plugins.ldap
        * `ansible_base.authentication.authenticator_plugins.local` - ansible_base.authentication.authenticator_plugins.local
        * `ansible_base.authentication.authenticator_plugins.github_team` - ansible_base.authentication.authenticator_plugins.github_team
        * `ansible_base.authentication.authenticator_plugins.saml` - ansible_base.authentication.authenticator_plugins.saml
        * `ansible_base.authentication.authenticator_plugins.github_enterprise_org` - ansible_base.authentication.authenticator_plugins.github_enterprise_org
        * `ansible_base.authentication.authenticator_plugins.google_oauth2` - ansible_base.authentication.authenticator_plugins.google_oauth2
        * `ansible_base.authentication.authenticator_plugins.keycloak` - ansible_base.authentication.authenticator_plugins.keycloak
        * `ansible_base.authentication.authenticator_plugins.radius` - ansible_base.authentication.authenticator_plugins.radius
        * `ansible_base.authentication.authenticator_plugins.github_enterprise_team` - ansible_base.authentication.authenticator_plugins.github_enterprise_team
        * `ansible_base.authentication.authenticator_plugins.github` - ansible_base.authentication.authenticator_plugins.github
        * `ansible_base.authentication.authenticator_plugins.azuread` - ansible_base.authentication.authenticator_plugins.azuread
        * `ansible_base.authentication.authenticator_plugins.tacacs` - ansible_base.authentication.authenticator_plugins.tacacs
        * `ansible_base.authentication.authenticator_plugins.github_enterprise` - ansible_base.authentication.authenticator_plugins.github_enterprise
        * `ansible_base.authentication.authenticator_plugins.github_org` - ansible_base.authentication.authenticator_plugins.github_org
        * `aap_gateway_api.authentication.authenticator_plugins.legacy_external_password` - aap_gateway_api.authentication.authenticator_plugins.legacy_external_password
        * `aap_gateway_api.authentication.authenticator_plugins.legacy_sso` - aap_gateway_api.authentication.authenticator_plugins.legacy_sso
        * `aap_gateway_api.authentication.authenticator_plugins.legacy_password` - aap_gateway_api.authentication.authenticator_plugins.legacy_password
        * `aap_gateway_api.authentication.authenticator_plugins.controller_admin` - aap_gateway_api.authentication.authenticator_plugins.controller_admin
    User:
      type: object
      description: Disallows editing of system user and enforces superuser requirement.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        related:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        summary_fields:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        created_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who created this resource.
        modified:
          type: string
          format: date-time
          readOnly: true
          description: The date/time this resource was created.
        modified_by:
          type: integer
          readOnly: true
          nullable: true
          description: The user who last modified this resource.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        password:
          type: string
          maxLength: 128
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_platform_auditor:
          type: boolean
          readOnly: true
        authenticators:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/AuthenticatorsEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
          writeOnly: true
          nullable: true
        authenticator_uid:
          type: string
          writeOnly: true
        managed:
          type: boolean
          readOnly: true
          description: Indicates if this user is managed by the system. It cannot
            be modified once created.
      required:
      - username
    UserAssociate:
      type: object
      description: Serializer used for adding objects to a many-to-many relationship
      properties:
        instances:
          type: array
          items:
            type: integer
          description: A list of users to add to this relationship.
      required:
      - instances
    UserDisassociate:
      type: object
      description: Serializer used for removing objects that are currently associated
        via a many-to-many relationship
      properties:
        instances:
          type: array
          items:
            type: integer
          description: A list of users to remove from this relationship.
      required:
      - instances
    UsernamePassword:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    api_gateway_root_view:
      type: object
      properties:
        current_version:
          type: string
        available_versions:
          type: object
          additionalProperties:
            type: string
      required:
      - available_versions
      - current_version
    api_root_view:
      type: object
      properties:
        description:
          type: string
        apis:
          type: object
          additionalProperties:
            type: string
      required:
      - apis
      - description
    custom_ui_auth:
      type: object
      properties:
        passwords:
          type: array
          items:
            $ref: '#/components/schemas/custom_ui_auth_password'
        ssos:
          type: array
          items:
            $ref: '#/components/schemas/custom_ui_auth_ssos'
        show_login_form:
          type: boolean
        login_redirect_override:
          type: string
        custom_login_info:
          type: string
        custom_logo:
          type: string
        managed_cloud_install:
          type: boolean
        legacy_controller_sso_url:
          type: string
        legacy_automation_hub_sso_url:
          type: string
        legacy_auth_enabled:
          type: boolean
      required:
      - custom_login_info
      - custom_logo
      - legacy_auth_enabled
      - legacy_automation_hub_sso_url
      - legacy_controller_sso_url
      - login_redirect_override
      - managed_cloud_install
      - passwords
      - show_login_form
      - ssos
    custom_ui_auth_password:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    custom_ui_auth_ssos:
      type: object
      properties:
        name:
          type: string
        login_url:
          type: string
        type:
          type: string
      required:
      - login_url
      - name
      - type
    session_view:
      type: object
      properties:
        now:
          type: string
          format: date-time
        expires_on:
          type: string
          format: date-time
        expires_in_seconds:
          type: integer
      required:
      - expires_in_seconds
      - expires_on
      - now
    session_view_404:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    session_view_post:
      type: object
      properties:
        message:
          type: string
      required:
      - message
  securitySchemes:
    Basic Authentication:
      type: http
      scheme: basic
    OAuth2 Authentication:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with format "Bearer &lt;base64token&gt;"
    SessionAuthentication:
      type: apiKey
      in: cookie
      name: gateway_sessionid
